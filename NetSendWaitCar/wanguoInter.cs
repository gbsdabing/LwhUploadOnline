//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;


// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
public partial class WGService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback queryObjectXmlOperationCompleted;
    
    private System.Threading.SendOrPostCallback writeObjectXmlOperationCompleted;
    
    /// <remarks/>
    public WGService() {
        this.Url = "http://10.205.20.250:8080/Service.asmx";
    }
    public WGService(string url)
    {
        this.Url = url;
    }

    /// <remarks/>
    public event queryObjectXmlCompletedEventHandler queryObjectXmlCompleted;
    
    /// <remarks/>
    public event writeObjectXmlCompletedEventHandler writeObjectXmlCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/queryObjectXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string queryObjectXml(string jkid, string jczdm, string key, string QueryXmlDoc)
    {
        object[] results = this.Invoke("queryObjectXml", new object[] {
                    jkid,
                    jczdm,
                    key,
                    QueryXmlDoc});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryObjectXml(string jkid, string jczdm, string key, string QueryXmlDoc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryObjectXml", new object[] {
                    jkid,
                    jczdm,
                    key,
                    QueryXmlDoc}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndqueryObjectXml(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void queryObjectXmlAsync(string jkid, string jczdm, string key, string QueryXmlDoc) {
        this.queryObjectXmlAsync(jkid, jczdm, key, QueryXmlDoc, null);
    }
    
    /// <remarks/>
    public void queryObjectXmlAsync(string jkid, string jczdm, string key, string QueryXmlDoc, object userState) {
        if ((this.queryObjectXmlOperationCompleted == null)) {
            this.queryObjectXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryObjectXmlOperationCompleted);
        }
        this.InvokeAsync("queryObjectXml", new object[] {
                    jkid,
                    jczdm,
                    key,
                    QueryXmlDoc}, this.queryObjectXmlOperationCompleted, userState);
    }
    
    private void OnqueryObjectXmlOperationCompleted(object arg) {
        if ((this.queryObjectXmlCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryObjectXmlCompleted(this, new queryObjectXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/writeObjectXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string writeObjectXml(string jkid, string jczdm, string key, string WriteXmlDoc)
    {
        object[] results = this.Invoke("writeObjectXml", new object[] {
                    jkid,
                    jczdm,
                    key,
                    WriteXmlDoc});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginwriteObjectXml(string jkid, string jczdm, string key, string WriteXmlDoc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("writeObjectXml", new object[] {
                    jkid,
                    jczdm,
                    key,
                    WriteXmlDoc}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndwriteObjectXml(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void writeObjectXmlAsync(string jkid, string jczdm, string key, string WriteXmlDoc) {
        this.writeObjectXmlAsync(jkid, jczdm, key, WriteXmlDoc, null);
    }
    
    /// <remarks/>
    public void writeObjectXmlAsync(string jkid, string jczdm, string key, string WriteXmlDoc, object userState) {
        if ((this.writeObjectXmlOperationCompleted == null)) {
            this.writeObjectXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteObjectXmlOperationCompleted);
        }
        this.InvokeAsync("writeObjectXml", new object[] {
                    jkid,
                    jczdm,
                    key,
                    WriteXmlDoc}, this.writeObjectXmlOperationCompleted, userState);
    }
    
    private void OnwriteObjectXmlOperationCompleted(object arg) {
        if ((this.writeObjectXmlCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.writeObjectXmlCompleted(this, new writeObjectXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void queryObjectXmlCompletedEventHandler(object sender, queryObjectXmlCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryObjectXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryObjectXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void writeObjectXmlCompletedEventHandler(object sender, writeObjectXmlCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class writeObjectXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal writeObjectXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
