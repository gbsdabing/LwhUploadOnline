//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.6.1055.0。
// 
namespace NetSendWaitCar {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TmriOutAccessSoap", Namespace="http://tempuri.org/")]
    public partial class XLYTmriOutAccess : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback queryObjectOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback writeObjectOutOperationCompleted;
        
        /// <remarks/>
        public XLYTmriOutAccess() {
            this.Url = "http://192.168.43.117:8081/TmriOutAccess.asmx";
        }
        public XLYTmriOutAccess(string url)
        {
            this.Url = url;
        }

        /// <remarks/>
        public event XLYqueryObjectOutCompletedEventHandler queryObjectOutCompleted;
        
        /// <remarks/>
        public event XLYwriteObjectOutCompletedEventHandler writeObjectOutCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/queryObjectOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string queryObjectOut(string xtlb, string jkxlh, string jkid, string QueryXmlDoc) {
            object[] results = this.Invoke("queryObjectOut", new object[] {
                        xtlb,
                        jkxlh,
                        jkid,
                        QueryXmlDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginqueryObjectOut(string xtlb, string jkxlh, string jkid, string QueryXmlDoc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("queryObjectOut", new object[] {
                        xtlb,
                        jkxlh,
                        jkid,
                        QueryXmlDoc}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndqueryObjectOut(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void queryObjectOutAsync(string xtlb, string jkxlh, string jkid, string QueryXmlDoc) {
            this.queryObjectOutAsync(xtlb, jkxlh, jkid, QueryXmlDoc, null);
        }
        
        /// <remarks/>
        public void queryObjectOutAsync(string xtlb, string jkxlh, string jkid, string QueryXmlDoc, object userState) {
            if ((this.queryObjectOutOperationCompleted == null)) {
                this.queryObjectOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryObjectOutOperationCompleted);
            }
            this.InvokeAsync("queryObjectOut", new object[] {
                        xtlb,
                        jkxlh,
                        jkid,
                        QueryXmlDoc}, this.queryObjectOutOperationCompleted, userState);
        }
        
        private void OnqueryObjectOutOperationCompleted(object arg) {
            if ((this.queryObjectOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryObjectOutCompleted(this, new XLYqueryObjectOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/writeObjectOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string writeObjectOut(string xtlb, string jkxlh, string jkid, string writeXmlDoc) {
            object[] results = this.Invoke("writeObjectOut", new object[] {
                        xtlb,
                        jkxlh,
                        jkid,
                        writeXmlDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwriteObjectOut(string xtlb, string jkxlh, string jkid, string writeXmlDoc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("writeObjectOut", new object[] {
                        xtlb,
                        jkxlh,
                        jkid,
                        writeXmlDoc}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndwriteObjectOut(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void writeObjectOutAsync(string xtlb, string jkxlh, string jkid, string writeXmlDoc) {
            this.writeObjectOutAsync(xtlb, jkxlh, jkid, writeXmlDoc, null);
        }
        
        /// <remarks/>
        public void writeObjectOutAsync(string xtlb, string jkxlh, string jkid, string writeXmlDoc, object userState) {
            if ((this.writeObjectOutOperationCompleted == null)) {
                this.writeObjectOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteObjectOutOperationCompleted);
            }
            this.InvokeAsync("writeObjectOut", new object[] {
                        xtlb,
                        jkxlh,
                        jkid,
                        writeXmlDoc}, this.writeObjectOutOperationCompleted, userState);
        }
        
        private void OnwriteObjectOutOperationCompleted(object arg) {
            if ((this.writeObjectOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeObjectOutCompleted(this, new XLYwriteObjectOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void XLYqueryObjectOutCompletedEventHandler(object sender, XLYqueryObjectOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XLYqueryObjectOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XLYqueryObjectOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void XLYwriteObjectOutCompletedEventHandler(object sender, XLYwriteObjectOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XLYwriteObjectOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XLYwriteObjectOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
