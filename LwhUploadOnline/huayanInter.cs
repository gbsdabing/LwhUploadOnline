//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1026
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;


// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="TmriJaxRpcOutAccessServiceSoap", Namespace="http://tempuri.org/")]
public partial class HYTmriJaxRpcOutAccessService: System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback queryObjectOutOperationCompleted;
    
    private System.Threading.SendOrPostCallback writeObjectOutOperationCompleted;
    
    /// <remarks/>
    public HYTmriJaxRpcOutAccessService() {
        this.Url = "http://192.1.15.5/jcxws/TmriOutAccess.asmx";
    }
    public HYTmriJaxRpcOutAccessService(string url)
    {
        this.Url = url;
    }
    
    /// <remarks/>
    public event HYqueryObjectOutCompletedEventHandler queryObjectOutCompleted;
    
    /// <remarks/>
    public event HYwriteObjectOutCompletedEventHandler writeObjectOutCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/queryObjectOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string queryObjectOut(string xtlb, string jkxlh, string jkid, string QueryXmlDoc)
    {
        object[] results = this.Invoke("queryObjectOut", new object[] {
                    xtlb,
                    jkxlh,
                    jkid,
                    QueryXmlDoc});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryObjectOut(string xtlb, string jkxlh, string jkid, string QueryXmlDoc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryObjectOut", new object[] {
                    xtlb,
                    jkxlh,
                    jkid,
                    QueryXmlDoc}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndqueryObjectOut(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void queryObjectOutAsync(string xtlb, string jkxlh, string jkid, string QueryXmlDoc) {
        this.queryObjectOutAsync(xtlb, jkxlh, jkid, QueryXmlDoc, null);
    }
    
    /// <remarks/>
    public void queryObjectOutAsync(string xtlb, string jkxlh, string jkid, string QueryXmlDoc, object userState) {
        if ((this.queryObjectOutOperationCompleted == null)) {
            this.queryObjectOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryObjectOutOperationCompleted);
        }
        this.InvokeAsync("queryObjectOut", new object[] {
                    xtlb,
                    jkxlh,
                    jkid,
                    QueryXmlDoc}, this.queryObjectOutOperationCompleted, userState);
    }
    
    private void OnqueryObjectOutOperationCompleted(object arg) {
        if ((this.queryObjectOutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryObjectOutCompleted(this, new HYqueryObjectOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/writeObjectOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string writeObjectOut(string xtlb, string jkxlh, string jkid, string WriteXmlDoc)
    {
        object[] results = this.Invoke("writeObjectOut", new object[] {
                    xtlb,
                    jkxlh,
                    jkid,
                    WriteXmlDoc});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginwriteObjectOut(string xtlb, string jkxlh, string jkid, string WriteXmlDoc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("writeObjectOut", new object[] {
                    xtlb,
                    jkxlh,
                    jkid,
                    WriteXmlDoc}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndwriteObjectOut(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void writeObjectOutAsync(string xtlb, string jkxlh, string jkid, string WriteXmlDoc) {
        this.writeObjectOutAsync(xtlb, jkxlh, jkid, WriteXmlDoc, null);
    }
    
    /// <remarks/>
    public void writeObjectOutAsync(string xtlb, string jkxlh, string jkid, string WriteXmlDoc, object userState) {
        if ((this.writeObjectOutOperationCompleted == null)) {
            this.writeObjectOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteObjectOutOperationCompleted);
        }
        this.InvokeAsync("writeObjectOut", new object[] {
                    xtlb,
                    jkxlh,
                    jkid,
                    WriteXmlDoc}, this.writeObjectOutOperationCompleted, userState);
    }
    
    private void OnwriteObjectOutOperationCompleted(object arg) {
        if ((this.writeObjectOutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.writeObjectOutCompleted(this, new HYwriteObjectOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void HYqueryObjectOutCompletedEventHandler(object sender, HYqueryObjectOutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HYqueryObjectOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal HYqueryObjectOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void HYwriteObjectOutCompletedEventHandler(object sender, HYwriteObjectOutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HYwriteObjectOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal HYwriteObjectOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
